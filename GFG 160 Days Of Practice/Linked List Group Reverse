/*node class of the linked list
class Node
{
    int data;
    Node next;
    Node(int key)
    {
        data = key;
        next = null;
    }
}

*/

class Solution {
    public static Node reverseKGroup(Node head, int k) {
        // code here
        if(head == null || k <= 1) return head;
        
        Node dummy = new Node(0);
        dummy.next = head;
        
        Node grpPrev = dummy;
        Node curr = head;
        
        
        while(curr != null){
            Node temp = curr;
            int count = 0;
            while(temp != null && count < k){
                temp = temp.next;
                count++;
            }
            
            Node grpStart = curr;
            Node prev = null;
            
            for(int i = 0; i< count&& curr != null; i++){
                Node next = curr.next;
                curr.next = prev; 
                prev = curr;
                curr = next;
            }
            
            grpPrev.next = prev;
            grpStart.next = curr;
            grpPrev = grpStart;
        }
        return dummy.next;
    }
}
