

/* node for linked list

class Node {
    int data;
    Node next;

    Node(int d) {
        data = d;
        next = null;
    }
}

*/

class Solution {
    
     static Node reverse(Node head){
        Node prev = null;
        while(head != null){
            Node next = head.next ;
            head.next = prev;
            prev = head;
            head = next;
        }
        return prev;
    }
    
    static Node removeZero(Node head){
        while(head != null && head.data == 0){
            head=  head.next;
        }
        
        return (head == null) ? new Node(0) : head;
    }
    
    static Node addTwoLists(Node num1, Node num2) {
        // code here
        num1 = reverse(num1);
        num2 = reverse(num2);
        
        Node dNode = new Node (-1);
        Node curr = dNode;
        int carry = 0;
        
        while(num1 != null || num2 != null || carry != 0){
            int sum = carry;
            
            if(num1 != null){ 
                sum += num1.data;
                num1 = num1.next; 
            }
             
             if(num2 != null){ 
                sum += num2.data;
                num2 = num2.next; 
            }   
            
            
            curr.next = new Node (sum%10);
            carry = sum / 10;
            curr =curr.next;
        }
        
        Node result = reverse(dNode.next);
        return removeZero(result);
    }
}
