//{ Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int r = sc.nextInt();
            int c = sc.nextInt();

            int matrix[][] = new int[r][c];

            for (int i = 0; i < r; i++) {
                for (int j = 0; j < c; j++) matrix[i][j] = sc.nextInt();
            }
            Solution ob = new Solution();
            ArrayList<Integer> ans = ob.spirallyTraverse(matrix);
            for (Integer val : ans) System.out.print(val + " ");
            System.out.println();

            System.out.println("~");
        }
    }
}
// } Driver Code Ends


class Solution {
    // Function to return a list of integers denoting spiral traversal of matrix.
    public ArrayList<Integer> spirallyTraverse(int mat[][]) {
        // code here
        int row = mat.length;
        int col = mat[0].length;
        int left = 0, right = col - 1, top = 0, bottom = row -1 ;
        ArrayList<Integer> ans = new ArrayList<>();
        
        while( left <= right && top <= bottom){
            //RIGHT 
            for(int i = left; i <= right; i++){
                ans.add(mat[top][i]);
            }
            top++;
            
            //BOTTOM
            for(int i = top; i <= bottom; i++){
                ans.add(mat[i][right]);
            }
            right--;
            
            if(top <= bottom){
                //LEFT
                for(int i = right; i >= left; i--){
                ans.add(mat[bottom][i]);
                }
                bottom--;
            }
            
            if(left <= right){
                //TOP
                for(int i = bottom; i >= top; i--){
                ans.add(mat[i][left]);
                }
                left++;
            }
        }
        
        return ans;
    }
}
